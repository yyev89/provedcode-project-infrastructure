- name: Update package repository cache
  tags: always
  ansible.builtin.dnf:
    update_cache: true

- name: Install a modularity appstream for PostgreSQL 15
  ansible.builtin.dnf:
    name: "@postgresql:15"
    state: present

- name: Install necessary packages
  ansible.builtin.dnf:
    name:
      - postgresql
      - postgresql-contrib
      - python3-psycopg2
    state: latest
    update_cache: true

- name: Initialize PostgreSQL database
  ansible.builtin.command:
    cmd: postgresql-setup --initdb
    creates: /var/lib/pgsql/initdb_postgresql.log

- name: Start and enable PostgreSQL service
  ansible.builtin.service:
    name: postgresql
    state: started
    enabled: true

- name: Create directory for ansible temporary files
  ansible.builtin.file:
    path: /var/lib/pgsql/.ansible/tmp
    state: directory
    mode: '1777'

- name: Grant access for application server to connect
  community.postgresql.postgresql_pg_hba:
    dest: /var/lib/pgsql/data/pg_hba.conf
    contype: host
    users: all
    databases: all
    address: "{{ server_ip }}/32"
    method: md5

- name: Configure listen addresses
  community.postgresql.postgresql_set:
    name: listen_addresses
    value: "*"
  become_user: postgres

- name: Create PostgreSQL database
  ansible.builtin.postgresql_db:
    name: "{{ db_name }}"
    state: present
    encoding: UTF-8
  become_user: postgres

- name: Create a user
  ansible.builtin.postgresql_user:
    name: "{{ db_user }}"
    password: "{{ db_pass }}"
    role_attr_flags: LOGIN,CREATEDB
    db: "{{ db_name }}"
  become_user: postgres

- name: Grant privileges to a user
  ansible.builtin.postgresql_privs:
    type: database
    database: "{{ db_name }}"
    roles: "{{ db_user }}"
    privs: ALL
  become_user: postgres

- name: Set database owner
  postgresql_owner:
    db: "{{ db_name }}"
    obj_type: database
    obj_name: "{{ db_name }}"
    new_owner: "{{ db_user }}"
  become_user: postgres
    
- name: Set schema owner
  postgresql_owner:
    db: "{{ db_name }}"
    obj_type: schema
    obj_name: public
    new_owner: "{{ db_user }}"
  become_user: postgres
  notify: Restart PostgreSQL
